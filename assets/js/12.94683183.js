(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{65:function(t,s,a){"use strict";a.r(s);var n=a(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h3",{attrs:{id:"原型-构造函数-实例（见prototype）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型-构造函数-实例（见prototype）","aria-hidden":"true"}},[t._v("#")]),t._v(" 原型 / 构造函数 / 实例（见prototype）")]),a("h3",{attrs:{id:"闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包","aria-hidden":"true"}},[t._v("#")]),t._v(" 闭包")]),a("p",[t._v("闭包属于一种特殊的作用域，称为 静态作用域。它的定义可以理解为: 父函数被销毁 的情况下，返回出的子函数的"),a("code",[t._v("[[scope]]")]),t._v("中仍然保留着父级的单变量对象和作用域链，因此可以继续访问到父级的变量对象，这样的函数称为闭包。")]),a("ul",[a("li",[t._v("闭包会产生一个很经典的问题:\n"),a("ul",[a("li",[t._v("多个子函数的[[scope]]都是同时指向父级，是完全共享的。因此当父级的变量对象被修改时，所有子函数都受到影响。")])])]),a("li",[t._v("解决\n"),a("ul",[a("li",[t._v("变量可以通过 函数参数的形式 传入，避免使用默认的[[scope]]向上查找")]),a("li",[t._v("使用setTimeout包裹，通过第三个参数传入")]),a("li",[t._v("使用 块级作用域，让变量成为自己上下文的属性，避免共享")])])])]),a("h3",{attrs:{id:"script-引入方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#script-引入方式","aria-hidden":"true"}},[t._v("#")]),t._v(" script 引入方式")]),a("ul",[a("li",[t._v("html 静态"),a("code",[t._v("<script>")]),t._v("引入")]),a("li",[t._v("js 动态插入"),a("code",[t._v("<script>")])])]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("加载")]),a("ul",[a("li",[a("code",[t._v("<script defer>")]),t._v(": 异步加载，元素解析完成后执行")]),a("li",[a("code",[t._v("<script async>")]),t._v(": 异步加载，与元素渲染并行执行")])])]),a("h3",{attrs:{id:"对象的拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象的拷贝","aria-hidden":"true"}},[t._v("#")]),t._v(" 对象的拷贝")]),a("ul",[a("li",[t._v("浅拷贝: 以赋值的形式拷贝引用对象，仍指向同一个地址，修改时原对象也会受到影响\n"),a("ul",[a("li",[a("code",[t._v("Object.assign")])]),a("li",[a("code",[t._v("展开运算符(...)")])])])]),a("li",[t._v("深拷贝: 完全拷贝一个新对象，修改时原对象不再受到任何影响\n"),a("ul",[a("li",[a("code",[t._v("JSON.parse(JSON.stringify(obj))")]),t._v(": 性能最快")])]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),a("ul",[a("li",[t._v("具有循环引用的对象时，报错")]),a("li",[t._v("当值为函数或undefined时，无法拷贝")])])]),a("ul",[a("li",[t._v("递归进行逐一赋值")])])])]),a("h3",{attrs:{id:"new运算符的执行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new运算符的执行过程","aria-hidden":"true"}},[t._v("#")]),t._v(" new运算符的执行过程")]),a("ul",[a("li",[t._v("新生成一个对象")]),a("li",[t._v("链接到原型: "),a("code",[t._v("obj.__proto__ = Con.prototype")])]),a("li",[t._v("绑定this: "),a("code",[t._v("apply")])]),a("li",[t._v("返回新对象")])]),a("h3",{attrs:{id:"instanceof原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instanceof原理","aria-hidden":"true"}},[t._v("#")]),t._v(" instanceof原理")]),a("p",[t._v("能在实例的 原型对象链 中找到该构造函数的prototype属性所指向的 原型对象，就返回true。即:")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// __proto__: 代表原型对象链")]),t._v("\ninstance"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("__proto__"),a("span",{attrs:{class:"token operator"}},[t._v("...")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" instance"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// return true")]),t._v("\n")])]),a("h3",{attrs:{id:"继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承","aria-hidden":"true"}},[t._v("#")]),t._v(" 继承")]),a("p",[t._v("在 JS 中，继承通常指的便是 原型链继承，也就是通过指定原型，并可以通过原型链继承原型上的属性或者方法。")]),a("ul",[a("li",[t._v("最优化: 圣杯模式")])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" inherit "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{attrs:{class:"token function-variable function"}},[t._v("F")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token constant"}},[t._v("F")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tc"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("F")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tc"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uber "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tc"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("ul",[a("li",[t._v("使用 ES6 的语法糖 "),a("code",[t._v("class / extends")])])]),a("h3",{attrs:{id:"类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 类型转换")]),a("h3",{attrs:{id:"类型判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型判断","aria-hidden":"true"}},[t._v("#")]),t._v(" 类型判断")]),a("p",[t._v("判断 Target 的类型，单单用 typeof 并无法完全满足，这其实并不是 bug，本质原因是 JS 的万物皆对象的理论。因此要真正完美判断时，我们需要区分对待:")]),a("ul",[a("li",[t._v("基本类型"),a("code",[t._v("(null)")]),t._v(": 使用 "),a("code",[t._v("String(null)")])]),a("li",[t._v("基本类型("),a("code",[t._v("string")]),t._v(" / "),a("code",[t._v("number")]),t._v(" / "),a("code",[t._v("boolean")]),t._v(" / "),a("code",[t._v("undefined")]),t._v(") + "),a("code",[t._v("function")]),t._v(": 直接使用 "),a("code",[t._v("typeof")]),t._v("即可")]),a("li",[t._v("其余引用类型("),a("code",[t._v("Array")]),t._v(" / "),a("code",[t._v("Date")]),t._v(" / "),a("code",[t._v("RegExp Error")]),t._v("): 调用"),a("code",[t._v("toString")]),t._v("后根据"),a("code",[t._v("[object XXX]")]),t._v("进行判断\n很稳的判断封装:")])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" classType "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'Array Date RegExp Object Error'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("split")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("' '")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("forEach")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" classType"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v("'[object'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" e "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("']'")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("type")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("String")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" classType"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Object"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toString"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("call")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("h3",{attrs:{id:"this-见this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this-见this","aria-hidden":"true"}},[t._v("#")]),t._v(" this(见this)")]),a("h3",{attrs:{id:"babel编译原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel编译原理","aria-hidden":"true"}},[t._v("#")]),t._v(" babel编译原理")]),a("ul",[a("li",[t._v("babylon 将 ES6/ES7 代码解析成 AST")]),a("li",[t._v("babel-traverse 对 AST 进行遍历转译，得到新的 AST")]),a("li",[t._v("新 AST 通过 babel-generator 转换成 ES5")])]),a("h3",{attrs:{id:"数组-array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组-array","aria-hidden":"true"}},[t._v("#")]),t._v(" 数组(array)")]),a("ul",[a("li",[a("code",[t._v("map")]),t._v(": 遍历数组，返回回调返回值组成的新数组")]),a("li",[a("code",[t._v("forEach")]),t._v(": 无法"),a("code",[t._v("break")]),t._v("，可以用"),a("code",[t._v("try/catch中throw new Error")]),t._v("来停止")]),a("li",[a("code",[t._v("filter")]),t._v(": 过滤")]),a("li",[a("code",[t._v("some")]),t._v(": 有一项返回true，则整体为true")]),a("li",[a("code",[t._v("every")]),t._v(": 有一项返回false，则整体为false")]),a("li",[a("code",[t._v("join")]),t._v(": 通过指定连接符生成字符串")]),a("li",[a("code",[t._v("push / pop")]),t._v(": 末尾推入和弹出，改变原数组， 返回推入/弹出项")]),a("li",[a("code",[t._v("unshift / shift")]),t._v(": 头部推入和弹出，改变原数组，返回操作项")]),a("li",[a("code",[t._v("sort(fn) / reverse")]),t._v(": 排序与反转，改变原数组")]),a("li",[a("code",[t._v("concat")]),t._v(": 连接数组，不影响原数组， 浅拷贝")]),a("li",[a("code",[t._v("slice(start, end)")]),t._v(": 返回截断后的新数组，不改变原数组")]),a("li",[a("code",[t._v("splice(start, number, value...)")]),t._v(": 返回删除元素组成的数组，value 为插入项，改变原数组")]),a("li",[a("code",[t._v("indexOf / lastIndexOf(value, fromIndex)")]),t._v(": 查找数组项，返回对应的下标")]),a("li",[a("code",[t._v("reduce / reduceRight(fn(prev, cur)， defaultPrev)")]),t._v(": 两两执行，"),a("code",[t._v("prev")]),t._v(" 为上次化简函数的"),a("code",[t._v("return")]),t._v("值，"),a("code",[t._v("cur")]),t._v(" 为当前值(从第二项开始)")]),a("li",[t._v("数组乱序：")])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("6")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("7")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("8")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("9")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("sort")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Math"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("random")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0.5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("ul",[a("li",[t._v("数组拆封")])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("arr"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function-variable function"}},[t._v("flat")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("toString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("split")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("','")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("map")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v("item "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])}],!1,null,null,null);s.default=o.exports}}]);